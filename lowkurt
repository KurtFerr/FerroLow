def func1(arg1, arg2):
    if arg1 < arg2:
        var7 = class2()
    else:
        var7 = class4()
    for var8 in range(2):
        var7.func3(arg1, arg1)
    var11 = class6()
    for var12 in func8(arg1, arg2):
        var56 = var11.func7
        var56(arg2, arg2)
    var63 = func13(arg1, arg2)
    result = -1510974281 ^ arg1
    return result
def func13(arg57, arg58):
    if arg58 < arg57:
        var59 = -359172657 + -906515689
    else:
        var59 = (arg57 & arg58 - ((arg57 - (arg57 ^ -484 | 920)) | 1847539205) | 354) + arg58 | arg58 + ((arg57 & arg57) ^ (((arg57 & 2141827754 ^ arg58 | 2134910796 + -277 + -383 - arg58) - 2097478883) ^ arg58)) ^ 1237634402
    var60 = -1579626426 & ((((arg58 + arg57 + arg58 - (675524881 - (arg57 - arg57) | (((arg58 ^ arg58) - arg58) ^ arg58) + arg58) ^ arg58 ^ -1217638391 | arg57 & -1026972843) | (arg58 + 252 | arg58)) - 1976406963 ^ 8) + -120109024)
    var61 = (arg57 + arg57) - (((-840 | var60 + 567341680) | var60) - -424 ^ var60 ^ -885)
    if var60 < arg57:
        var62 = (2020060953 & 608 ^ -112711010) + 1857948892
    else:
        var62 = 624 & (arg57 ^ arg57)
    result = (arg57 & ((-1243108117 ^ var61 - 221 ^ (arg58 | (-613 & arg57 ^ 472050988) | arg58) - var60) ^ arg57)) & arg58
    return result
def func9(arg15, arg16):
    var43 = var19(arg16, arg15)
    var44 = arg16 - var43
    result = var43 | ((642 - (71 + 1951576225)) & var44 - -158 | 378 ^ (var44 | -1947980027) + -167 ^ (var44 & var43))
    return result
def func12(arg20, arg21):
    if arg21 < arg21:
        var22 = 76 - 199 ^ arg21
    else:
        var22 = -1839247967 | 238 & 32 ^ 806
    var23 = (arg20 - arg21) ^ arg20
    if arg20 < var23:
        var24 = var23 - arg20 - 825759992
    else:
        var24 = var23 - arg20
    var25 = var23 - arg21
    var26 = arg20 & var23
    var27 = (var25 | var23) + (828 & arg21)
    var28 = arg21 & var26
    var29 = var27 ^ arg21
    var30 = ((-317 - var26) - var25) + arg20
    var31 = ((var29 - var25) - var30) ^ var26
    if var27 < var30:
        var32 = var26 | var26
    else:
        var32 = (var30 ^ arg21) | arg20
    var33 = 449 & 296 + var27
    if var31 < var28:
        var34 = (var26 ^ 1580160978 & var33) + var25
    else:
        var34 = (var31 ^ var27) | var25 - var30
    var35 = (var33 - arg21) ^ var29 - var31
    var36 = var35 + (var23 - arg20) - var26
    var37 = (var33 ^ var23 - arg21) - arg20
    if arg21 < var36:
        var38 = var25 & (209 ^ arg20)
    else:
        var38 = var26 & (var35 + var36 & var33)
    var39 = (arg20 & var28) | var28 ^ var35
    if arg21 < var39:
        var40 = -37 + var29 - var30 - var33
    else:
        var40 = (var37 - -419 - var37) | var37
    var41 = var39 & var39 ^ -114 | var27
    var42 = var27 | var27
    result = var35 - arg20
    return result
def func11():
    closure = [-1]
    def func10(arg17, arg18):
        closure[0] += func12(arg17, arg18)
        return closure[0]
    func = func10
    return func
var19 = func11()
def func8(arg13, arg14):
    var45 = func9(arg14, 590213021)
    yield var45
    var46 = arg14 ^ arg13 + 239 - 695000737
    yield var46
    var47 = 461 | arg13
    yield var47
    var48 = ((arg14 - -1341162279) + arg13) | var46
    yield var48
    var49 = var48 - var48 - (var47 | var48)
    yield var49
    var50 = var48 + arg14 | arg14
    yield var50
    var51 = ((var47 + var49) & var49) ^ var46
    yield var51
    var52 = arg13 ^ var50 + var49
    yield var52
    var53 = arg14 ^ ((var52 | var51) - var52)
    yield var53
    var54 = var51 + var47
    yield var54
    var55 = var49 & var49
    yield var55
class class6(object):
    def func7(self, arg9, arg10):
        return 0
class class4(object):
    def func3(self, arg5, arg6):
        result = 1391711821 | arg5 & arg6
        return result
class class2(object):
    def func3(self, arg3, arg4):
        return 0
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 14'
    print 'arg_number: 64'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
